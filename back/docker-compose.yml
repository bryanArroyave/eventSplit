version: '3.8'

services:

  journey-service:
    build:
      context: journey-service  # UbicaciÃ³n del Dockerfile
      dockerfile: Dockerfile
    container_name: journey-service
    restart: unless-stopped
    networks:
      - eventsplit_network
    ports: [8080:8080]
    labels: { logging: "promtail" }

  # ðŸ”¹ MongoDB (Base de datos)
  mongodb:
    image: mongo:6
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    networks:
      - eventsplit_network

  # ðŸ”¹ RabbitMQ (MensajerÃ­a)
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - eventsplit_network

  # ðŸ”¹ Jaeger (Trazabilidad)
  jaeger:
    image: jaegertracing/all-in-one:1.50
    container_name: jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"
      - "14268:14268"
    networks:
      - eventsplit_network

  # ðŸ”¹ Loki (Logging centralizado)
  loki:
    image: grafana/loki:3.3.2
    container_name: loki
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml
    ports: ["${LOKI_PORT}:3100"]
    volumes:
      - loki_data:/loki
    networks:
      - eventsplit_network

  promtail:
    image: grafana/promtail:3.3.2
    command: -config.file=/etc/promtail/docker-config.yaml
    volumes:
      - ./config/promtail.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on: [loki]
    networks:
      - eventsplit_network

  # ðŸ”¹ Prometheus (MÃ©tricas)
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - eventsplit_network

  # ðŸ”¹ Grafana (VisualizaciÃ³n de mÃ©tricas)
  grafana:
    image: grafana/grafana:10.0.3
    container_name: grafana
    restart: unless-stopped
    volumes:
      - ./config/grafana.yaml:/etc/grafana/provisioning/datasources/datasources.yaml

    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - eventsplit_network
    



  # ðŸ”¹ API Gateway (Nginx como proxy)
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - eventsplit_network

networks:
  eventsplit_network:
    driver: bridge

volumes:
  mongodb_data:
  rabbitmq_data:
  loki_data:
